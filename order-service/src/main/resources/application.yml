server:
  port: 8083

spring:
  application:
    name: order-service

  datasource:
    url: jdbc:h2:mem:orderdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password

  h2:
    console:
      enabled: true
      path: /h2-console

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    defer-datasource-initialization: true
  config:
    import: "optional:configserver:http://localhost:8888/"
  sql:
    init:
      mode: always

  # RabbitMQ Configuration for Event Publishing
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

  # Spring Cloud Stream Configuration
  cloud:
    stream:
      bindings:
        # Order events output binding
        order-events-out-0:
          destination: order.events
        # Notification requests output binding
        notification-requests-out-0:
          destination: notification.requests

eureka:
  client:
    service-url:
      default-zone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    hostname: localhost

springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

logging:
  level:
    com.pizzeria.orderservice: DEBUG
